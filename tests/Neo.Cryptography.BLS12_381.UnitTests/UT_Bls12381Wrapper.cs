using Microsoft.VisualStudio.TestTools.UnitTesting;
using FluentAssertions;
using System;
using System.Globalization;
using System.Text;

namespace Neo.Cryptography.BLS12_381.UnitTests
{
    [TestClass()]
    public class UT_Bls12381Wrapper
    {
        private byte[] g1;
        private byte[] g2;
        private byte[] gt;

        [TestInitialize]
        public void Setup()
        {
            g1 = HexToBytes("17F1D3A73197D7942695638C4FA9AC0FC3688C4F9774B905A14E3A3F171BAC586C55E83FF97A1AEFFB3AF00ADB22C6BB08B3F481E3AAA0F1A09E30ED741D8AE4FCF5E095D5D00AF600DB18CB2C04B3EDD03CC744A2888AE40CAA232946C5E7E1".ToLower());
            g2 = HexToBytes("13E02B6052719F607DACD3A088274F65596BD0D09920B61AB5DA61BBDC7F5049334CF11213945D57E5AC7D055D042B7E024AA2B2F08F0A91260805272DC51051C6E47AD4FA403B02B4510B647AE3D1770BAC0326A805BBEFD48056C8C121BDB80606C4A02EA734CC32ACD2B02BC28B99CB3E287E85A763AF267492AB572E99AB3F370D275CEC1DA1AAA9075FF05F79BE0CE5D527727D6E118CC9CDC6DA2E351AADFD9BAA8CBDD3A76D429A695160D12C923AC9CC3BACA289E193548608B82801".ToLower());
            gt = HexToBytes("C5851FA033E47219382577FD762BD397F9CD6BC96F54CEC81406D466733EF6CE80378481273411A625D8C63F8A44F31395699D2EB03163D27D7E79F782A4689D92EA398D24299B9CAA0731E1A21C80F466B0BCBD32076CA1780436BAAFA43C0841B61609DB61E2590D963EB2F4B61627459CBDA0105BE5C8A8ED4D9CD90BDB0BC5AAFD57BF9EF88C5E7A779E92B7D612355FE1B08851C85F6563098F3A6EA0342CD62AE0A62631DB0B999A7DA95A6FFC10C289EBF5552FA189886F923A70231778878271298F58938575AB11865BF643DF9F27ECF5AA8331F69DC98AE1D773FAB0994CA6A676E1641F8F38588CA79F1712EF2ACA110A2A676BF1A32AB5B9110D6E059D69D01244A4A55B1A2277011DC02955736CDECEE06639C3DD9F1EA7F50579C662B0A1880AD30483FC355D6AC55A0D291FA8A634C8D0C70737DAC23054CDF00A5080F77FC2F0AE2ED7E2A65D240956511B7976062E9F13FE184923C8D1E2F41B563C9F459E4CC1E3D3B9535EE8A32000A7211E120A82CC9AC5418361AF15B13A99248C65957CB986A81C7238EB73BC34744749D756528B4A50EA0219A48B6DCE860CF8D3A304AA6E68FB874AA61826CF20B91BE783BB4539A792AC77522AA046F0949FE50EFCF7586078F3CD5871F645F9821B06C17C67E5DB9FAA47F80357E63461A5DB78806E8A99439AECD71C6637991A9A59AAB144EE42082FF6A0C9FADF05B6E39B158EC23FF14A0DBA860CB1FF526AA0F20FE86C901A7248CA94761485B0033E188375E2E4CE40DDAF67F5FCA526E5D2966D9A42221F86499F7E19".ToLower());
        }

        [TestMethod]
        public void TestPointAdd()
        {
            byte[] value = Bls12381Wrapper.PointAdd(gt, gt);
            ToHexString(value).Should().BeoLower());
        }

        [TestMethod]
        public void TestPointMul()
        {
            byte[] value1 = Bls12381Wrapper.PointMul(gt, 3);
            object p = ToHexString(value1).Should().BeoLower());
            byte[] value2 = Bls12381Wrapper.PointMul(gt, -3);
            ToHexString(value2).Should().BeoLower());
        }

        [TestMethod]
        public void TestPointPairing()
        {
            byte[] value = Bls12381Wrapper.PointPairing(g1, g2);
            ToHexString(value).Should().Be("C5851FA033E47219382577FD762BD397F9CD6BC96F54CEC81406D466733EF6CE80378481273411A625D8C63F8A44F31395699D2EB03163D27D7E79F782A4689D92EA398D24299B9CAA0731E1A21C80F466B0BCBD32076CA1780436BAAFA43C0841B61609DB61E2590D963EB2F4B61627459CBDA0105BE5C8A8ED4D9CD90BDB0BC5AAFD57BF9EF88C5E7A779E92B7D612355FE1B08851C85F6563098F3A6EA0342CD62AE0A62631DB0B999A7DA95A6FFC10C289EBF5552FA189886F923A70231778878271298F58938575AB11865BF643DF9F27ECF5AA8331F69DC98AE1D773FAB0994CA6A676E1641F8F38588CA79F1712EF2ACA110A2A676BF1A32AB5B9110D6E059D69D01244A4A55B1A2277011DC02955736CDECEE06639C3DD9F1EA7F50579C662B0A1880AD30483FC355D6AC55A0D291FA8A634C8D0C70737DAC23054CDF00A5080F77FC2F0AE2ED7E2A65D240956511B7976062E9F13FE184923C8D1E2F41B563C9F459E4CC1E3D3B9535EE8A32000A7211E120A82CC9AC5418361AF15B13A99248C65957CB986A81C7238EB73BC34744749D756528B4A50EA0219A48B6DCE860CF8D3A304AA6E68FB874AA61826CF20B91BE783BB4539A792AC77522AA046F0949FE50EFCF7586078F3CD5871F645F9821B06C17C67E5DB9FAA47F80357E63461A5DB78806E8A99439AECD71C6637991A9A59AAB144EE42082FF6A0C9FADF05B6E39B158EC23FF14A0DBA860CB1FF526AA0F20FE86C901A7248CA94761485B0033E188375E2E4CE40DDAF67F5FCA526E5D2966D9A42221F86499F7E19".ToLower());
        }

        private byte[] HexToBytes(string value)
        {
            if (value == null || value.Length == 0)
                return Array.Empty<byte>();
            if (value.Length % 2 == 1)
                throw new FormatException();
            byte[] result = new byte[value.Length / 2];
            for (int i = 0; i < result.Length; i++)
                result[i] = byte.Parse(value.Substring(i * 2, 2), NumberStyles.AllowHexSpecifier);
            return result;
        }

        private string ToHexString(byte[] value)
        {
            StringBuilder sb = new();
            foreach (byte b in value)
                sb.AppendFormat("{0:x2}", b);
            return sb.ToString();
        }
    }
}